---
- name: Register directory for install folder
  stat: path=/usr/share/elasticsearch
  register: esinstalldir

- name: Creating Directories in /local - master
  file: path=/{{ item.0 }}/{{ item.1 }}/{{ item.2 }} state=directory owner=elasticsearch group=elasticsearch 
  with_nested:
    - ['local']
    - ['es']
    - ['logs', 'repo', 'data']

- name: Creating Directories in /etc - master
  file: path=/etc/{{ item.0 }}/{{ item.1 }}/{{ item.2 }} state=directory owner=elasticsearch group=elasticsearch 
  with_nested:
    - ['elasticsearch']
    - ['{{ datadir0 }}']
    - ['scripts']

- name: Move elasticsearch directory to local - master
  command: mv /usr/share/elasticsearch /local/es/install
  when: esinstalldir.stat.exists

- name: Creating Directories in server1
  file: path=/{{ item.0 }}/{{ item.1 }}/{{ item.2 }} state=directory owner=elasticsearch group=elasticsearch 
  with_nested:
    - ['{{ datadir1 }}']
    - ['es']
    - ['logs', 'repo', 'data']

- name: Creating Directories in /etc - server1
  file: path=/etc/{{ item.0 }}/{{ item.1 }}/{{ item.2 }} state=directory owner=elasticsearch group=elasticsearch 
  with_nested:
    - ['elasticsearch']
    - ['{{ datadir1 }}']
    - ['scripts']

- name: Creating Directories in server2
  file: path=/{{ item.0 }}/{{ item.1 }}/{{ item.2 }} state=directory owner=elasticsearch group=elasticsearch 
  with_nested:
    - ['{{ datadir2 }}']
    - ['es']
    - ['logs', 'repo', 'data']

- name: Creating Directories in /etc - server2
  file: path=/etc/{{ item.0 }}/{{ item.1 }}/{{ item.2 }} state=directory owner=elasticsearch group=elasticsearch 
  with_nested:
    - ['elasticsearch']
    - ['{{ datadir2 }}']
    - ['scripts']

- name: Copy logging.xml to data folders
  copy: src={{ item.src }} dest={{ item.dest }} owner=elasticsearch group=elasticsearch remote_src=True
  with_items:
    - { src: '/etc/elasticsearch/logging.yml', dest: '/etc/elasticsearch/data00/' }
    - { src: '/etc/elasticsearch/logging.yml', dest: '/etc/elasticsearch/data01/' }
    - { src: '/etc/elasticsearch/logging.yml', dest: '/etc/elasticsearch/data02/' }
#  ignore_errors: yes

- name: Copy elasticsearch service file - master
  copy: src=files/elasticsearch0.service dest=/usr/lib/systemd/system/elasticsearch0.service owner=root group=root mode=0644

- name: Copy elasticsearch service file - server1
  copy: src=files/elasticsearch1.service dest=/usr/lib/systemd/system/elasticsearch1.service owner=root group=root mode=0644

- name: Copy elasticsearch service file - server2
  copy: src=files/elasticsearch2.service dest=/usr/lib/systemd/system/elasticsearch2.service owner=root group=root mode=0644

- name: Configuration file for elasticsearch
  template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/{{item.dir}}/elasticsearch.yml owner=elasticsearch group=elasticsearch
  with_items:
     - { dir: data00, hostname: "${HOSTNAME}-0", path_data: /local/es/data, path_logs: /local/es/logs, path_repo: /local/es/repo, node_master: "true", node_data: "false", http_port: 9200, transport_port: 9300 }
     - { dir: data01, hostname: "${HOSTNAME}-1", path_data: /data01/es/data, path_logs: /data01/es/logs, path_repo: /data01/es/repo, node_master: "false", node_data: "true", http_port: 9201, transport_port: 9301 }
     - { dir: data02, hostname: "${HOSTNAME}-2", path_data: /data02/es/data, path_logs: /data02/es/logs, path_repo: /data02/es/repo, node_master: "false", node_data: "true", http_port: 9202, transport_port: 9302 }
